#include <stdio.h>
#include <malloc.h>
#include <string.h>

typedef struct {
    char TenDV[25];
    float TL,GT,DG;
    int PA;
} DoVat;

DoVat* Read_File (float* W, int* n) {
    FILE *f=fopen("Balo3.inp","r");
    fscanf(f,"%f",&W);
    int i=0;
    DoVat *dsdv;
    dsdv = (DoVat*)malloc(sizeof(DoVat));
    while(!feof(f)) {
        fscanf(f,"%f%f%[^\n]",&dsdv[i].TL,&dsdv[i].GT,&dsdv[i].TenDV);
        dsdv[i].DG=dsdv[i].GT/dsdv[i].TL;
        dsdv[i].PA=0;
        i++;
        dsdv = (DoVat*)realloc(dsdv,sizeof(DoVat)*(i+1));
    }
    *n=i;
    fclose(f);
    return dsdv;
}

void Swap (DoVat* a, DoVat* b) {
    DoVat temp;
    temp = *a;
    *a = *b;
    *b = temp;
}

void BubbleSort (DoVat* dsdv, int n) {
    for(int i=0;i<n-1;i++)
        for(int j=n-1;j>=i+1;j--)
            if(dsdv[j].DG>dsdv[j-1].DG)
                Swap(&dsdv[j],&dsdv[j-1]);
}

void Greedy (DoVat* dsdv, float W, int n) {
    for(int i=0;i<n;i++) {
        dsdv[i].PA=W/dsdv[i].TL;
        if (dsdv[i].PA > 1) dsdv[i].PA = 1;
        W -= dsdv[i].PA*dsdv[i].TL;
    }
}

void in (DoVat* dsdv, float W, int n) {
    float TongGT=0.0, TongTL=0.0;
    printf("Phuong an cai balo 2 voi giai thuat tham an:\n");
    printf("|---|------------------|---------|---------|---------|-----------|\n");
    printf("|STT|    Ten Do Vat    | T Luong |  G Tri  |  D Gia  | Phuong an |\n");
    for(int i=0;i<n;i++) {
        printf("|%2d|%-18s|%9.2f|%9.2f|%9.2f|%5d|\n",i+1,dsdv[i].TenDV,dsdv[i].TL,dsdv[i].GT,dsdv[i].DG,dsdv[i].PA);
        TongTL += dsdv[i].PA*dsdv[i].TL;
        TongGT += dsdv[i].PA*dsdv[i].GT;
    }
    printf("|---|------------------|---------|---------|---------|-----------|\n");
    printf("Tong trong luong balo: %9.2f\n",W);
    printf("Tong trong luong da su dung: %9.2f\n",TongTL);
    printf("Tong gia tri: %9.2f\n",TongGT);
    for(int i=1;i<n;i++)
        printf(",%2d",dsdv[i].PA);
    printf(")");
}

int main() {
    int n;
    float W;
    DoVat *dsdv;
    dsdv = Read_File(&W,&n);
    BubbleSort(dsdv,n);
    Greedy(dsdv,W,n);
    in(dsdv,W,n);
    free(dsdv);
    return 0;
}
